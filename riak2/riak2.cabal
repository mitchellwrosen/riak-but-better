cabal-version: 2.4

name: riak2
version: 0.1.0
build-type: Simple

description:
  __Library organization__
  .
  TODO update this
  .
  This library's modules are organized around types. A module will typically
  export one type and its API, which consists of the functions whose primary
  input type is the type in question.
  .
  For example, to /list the keys in a bucket/, the primary input type is the
  /bucket/, so this function is exported by the the "Riak.Bucket" module.
  .
  Modules are designed for qualified imports, but all types are re-exported by
  the top-level "Riak" module.
  .
  Your imports may therefore look like this:
  .
  @
  import qualified Riak (Bucket(..), BucketType(..), Key(..))
  import qualified Riak.Bucket
  import qualified Riak.BucketType
  import qualified Riak.Key
  @
  .
  __Module guide__
  .
  Top-level re-export of all types
  .
  * "Riak"
  .
  Connection establishment and basic server information:
  .
  * "Riak.Client"
  * "Riak.ServerInfo"
  .
  Key/value store types and operations:
  .
  * "Riak.Object"
  * "Riak.Content"
  .
  CRDT types and operations:
  .
  * "Riak.Counter"
  * "Riak.HyperLogLog"
  * "Riak.Map"
  * "Riak.Set"
  .
  Namespace types and operations:
  .
  * "Riak.BucketType"
  * "Riak.Bucket"
  * "Riak.Key"
  * "Riak.BucketProperties"
  .
  Secondary index types:
  .
  * "Riak.SecondaryIndex"
  * "Riak.SecondaryIndexValue"
  * "Riak.ExactQuery"
  * "Riak.RangeQuery"
  .
  Solr types and operations:
  .
  * "Riak.Schema"
  * "Riak.Index"
  .
  MapReduce types and operations:
  .
  * "Riak.MapReduce"
  .
  Miscellaneous types:
  .
  * "Riak.Context"
  * "Riak.Error"
  * "Riak.Opts"
  * "Riak.Quorum"

library
  build-depends:
    base ^>= 4.11.1 || ^>= 4.12.0,
    base64-bytestring ^>= 1.0.0,
    bytestring ^>= 0.10.8,
    bytestring-lexing ^>= 0.5.0,
    containers ^>= 0.5.11 || ^>= 0.6.0,
    data-default-class ^>= 0.1.2,
    foldl ^>= 1.4.4,
    generic-lens ^>= 1.2.0,
    hashable ^>= 1.2.7,
    lens ^>= 4.17,
    profunctors ^>= 5.3,
    riak2-core,
    text ^>= 1.2.3,
    time,
    unordered-containers ^>= 0.2.9,

  default-extensions:
    ConstraintKinds
    DataKinds
    DefaultSignatures
    DeriveAnyClass
    DeriveFunctor
    DeriveGeneric
    DerivingStrategies
    DuplicateRecordFields
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    GADTs
    GeneralizedNewtypeDeriving
    InstanceSigs
    KindSignatures
    LambdaCase
    MagicHash
    MultiParamTypeClasses
    NamedFieldPuns
    OverloadedLabels
    OverloadedStrings
    PatternSynonyms
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators
    UnicodeSyntax
    ViewPatterns

  default-language:
    Haskell2010

  exposed-modules:
    Riak
    Riak.Bucket
    Riak.BucketProperties
    Riak.BucketType
    Riak.Client
    Riak.Content
    Riak.Context
    Riak.Counter
    Riak.Error
    Riak.ExactQuery
    Riak.HyperLogLog
    Riak.Index
    Riak.SecondaryIndex
    Riak.SecondaryIndexValue
    Riak.Schema
    Riak.Key
    Riak.Map
    Riak.MapReduce
    Riak.Object
    Riak.Opts
    Riak.Quorum
    Riak.RangeQuery
    Riak.ServerInfo
    Riak.Set

    ZZZ.Erlang
    ZZZ.Riak
    ZZZ.Riak.Internal.Debug
    ZZZ.Riak.Internal.Manager
    ZZZ.Riak.Internal.MapReduce
    ZZZ.Riak.Internal.Params

  ghc-options:
    -Weverything
    -fno-warn-all-missed-specialisations
    -fno-warn-implicit-prelude
    -fno-warn-missed-specialisations
    -fno-warn-missing-export-lists
    -fno-warn-missing-import-lists
    -fno-warn-name-shadowing
    -fno-warn-safe
    -fno-warn-unsafe

  hs-source-dirs:
    src

  other-modules:
    Riak.Internal.Bucket
    Riak.Internal.Context
    Riak.Internal.Error
    Riak.Internal.ExactQuery
    Riak.Internal.Key
    Riak.Internal.Object
    Riak.Internal.Panic
    Riak.Internal.Prelude
    Riak.Internal.Proto.Content
    Riak.Internal.Proto.Pair
    Riak.Internal.Quorum
    Riak.Internal.RangeQuery
    Riak.Internal.SecondaryIndex
    Riak.Internal.SecondaryIndexValue
    Riak.Internal.Set
    Riak.Internal.Utils

  mixins:
    bytestring (Data.ByteString as ByteString, Data.ByteString.Char8),
    text (Data.Text as Text, Data.Text.Encoding),
    unordered-containers (Data.HashMap.Strict as HashMap, Data.HashSet as HashSet)

test-suite tests
  build-depends:
    base,
    generic-lens,
    lens,
    random-bytestring,
    riak2,
    riak2-interface-impls,
    tasty,
    tasty-hunit

  default-extensions:
    DataKinds
    DuplicateRecordFields
    LambdaCase
    NamedFieldPuns
    OverloadedStrings
    ScopedTypeVariables
    TypeApplications
    UnicodeSyntax

  default-language:
    Haskell2010

  ghc-options:
    -Wall

  hs-source-dirs:
    test

  main-is:
    Main.hs

  mixins:
    riak2 requires (Riak.Interface.Signature as Riak.Interface.Impl.Socket)

  type:
    exitcode-stdio-1.0
